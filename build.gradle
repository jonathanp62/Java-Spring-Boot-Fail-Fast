/*
 * (#)build.gradle  0.1.0   01/05/2025
 *
 * @author   Jonathan Parker
 * @version  0.1.0
 * @since    0.1.0
 *
 * MIT License
 *
 * Copyright (c) 2024 Jonathan M. Parker
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * The following system property must be set in HOME/.gradle/gradle.properties:
 *   systemProp.macosArchitecture=intel -or-
 *   systemProp.macosArchitecture=silicon
 */

plugins {
	id 'java'
	id 'org.springframework.boot'			version '3.5.0'
	id 'io.spring.dependency-management'	version '1.1.7'
}

group = 'net.jmp.spring.boot.failfast'
version = '0.1.0'
description = 'Spring-Boot-Fail-Fast'

println "The groupId is ${project.group}"
println "The artifactId is ${project.name}" // Set in settings.gradle
println "The version is ${project.version}"

java.sourceCompatibility = JavaVersion.VERSION_24

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	implementation      (libs.net.jmp.util.logging.logging.utilities)
	implementation		('org.springframework.boot:spring-boot-starter')
	testImplementation	('org.springframework.boot:spring-boot-starter-test')
	testRuntimeOnly		('org.junit.platform:junit-platform-launcher')
}

tasks.withType(Javadoc).configureEach {
    CoreJavadocOptions cjo = options as CoreJavadocOptions
    StandardJavadocDocletOptions sjdo = options as StandardJavadocDocletOptions

    cjo.encoding("UTF-8")
    cjo.addStringOption("source", "24")
    cjo.memberLevel = JavadocMemberLevel.PRIVATE

    sjdo.version(true)
}

tasks.named('test') {
	useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed"
	}
}
